return(FALSE)
}
num_check(2,c(1,2,3))
num_check(2,c(1,4,5))
# Ex3
num_count <- function(val, v) {
count = 0
for (num in v) {
if (num == val) {
count <- count + 1
}
}
return(count)
}
num_count(2,c(1,1,2,2,3,3))
num_count(1,c(1,1,2,2,3,1,4,5,5,2,2,1,3))
a= 0
a
# Ex4
bar_count <- function(wgt) {
bags <- 0
bags <- wgt %/% 5
bags <- bags + wgt%%5
return(bags)
}
bar_count(6)
bar_count(17)
out <- c(0)
out
out <- c()
out
# Ex5
summer <- function(v1, v2, v3) {
out <- c()
if (v1 %% 3 == 0){
append(out, v1)
}
if (v2 %% 3 == 0){
append(out, v2)
}
if (v3 %% 3 == 0){
append(out, v3)
}
return(sum(out))
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
# Ex5
summer <- function(v1, v2, v3) {
out <- c()
if (v1 %% 3 != 0){
append(out, v1)
}
if (v2 %% 3 != 0){
append(out, v2)
}
if (v3 %% 3 != 0){
append(out, v3)
}
return(sum(out))
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
# Ex5
summer <- function(v1, v2, v3) {
out <- c(0)
if (v1 %% 3 != 0){
append(out, v1)
}
if (v2 %% 3 != 0){
append(out, v2)
}
if (v3 %% 3 != 0){
append(out, v3)
}
return(sum(out))
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
print("yes")
summer(3,6,9)
out <- c()
append(out, 1)
out
# Ex5
summer <- function(v1, v2, v3) {
out <- c(0)
if (v1 %% 3 != 0){
out <- append(out, v1)
}
if (v2 %% 3 != 0){
out <- append(out, v2)
}
if (v3 %% 3 != 0){
out <- append(out, v3)
}
return(sum(out))
}
summer(7,2,3)
summer(3,6,9)
summer(9,11,12)
# Ex6
prime_check <- function(num) {
if (num == 2){
return(T)
} else if (any(num %% 2:(num-1) == 0)) {
return(F)
} else {
return(T)
}
}
prime_check(2)
prime_check(5)
prime_check(4)
prime_check(237)
prime_check(131)
times <- function(x){}
times <- function(x){}
times <- function(x){return(x*2)}
v<-1:5
v
sapply(v, times)
sapply(v, times)
class(sapply(v, times))
class(v)
times <- function(x,y){return(x*y)}
class(sapply(v,1:5, times))
class(sapply(v,times, y =1:5))
sapply(v,times, y =1:5)
help append
help(append)
help("factorial")
p = c(factorial(365) / (factorial(365-1) * 365))
for (i in 2:100){
k = i - 1
append(p, p[k] * (365 - k) / 465)
}
print(p[100])
p = c(factorial(365) / (factorial(365-1) * 365))
p
p = c(365 / 365)
for (i in 2:100){
k = i - 1
append(p, p[k] * (365 - k) / 465)
print(p)
}
print(p[100])
p = c(365 / 365)
for (i in 2:100){
k = i - 1
append(p, p[k] * (365 - k) / 365)
print(p)
}
print(p[100])
p = c(365 / 365)
for (i in 2:100){
k = i - 1
p = append(p, p[k] * (365 - k) / 365)
print(p)
}
print(p[100])
help("print")
print("The possibility of people with same birthday", 1-p[100])
# p[k] : k people all have different birthday
p = c(365 / 365)
for (i in 2:100){
k = i - 1
p = append(p, p[k] * (365 - k) / 365)
print(p)
}
print("The possibility of people with same birthday " + as.character(1-p[100]))
print("The possibility of people with same birthday " + toString(1-p[100]))
toString(10)
toString(10-5)
print("The possibility of people with same birthday " + toString(1-p[100]))
print("The possibility of people with same birthday " + toString((1-p[100])))
print("The possibility of people with same birthday " + toString(win))
win = 1-p[100]
print("The possibility of people with same birthday " + toString(win))
print("The possibility of people with different birthday: 1 - " + toString(p[100]))
p[100]
print("The possibility of people with different birthday: 1 - " + p[100])
print(paste0("The possibility of people with different birthday: 1 - ", p[100]))
print(paste0("The possibility of people with different birthday: 1 - ", round(p[100], 2)))
print(paste0("The possibility of people with different birthday: 1 - ", trunc(p[100])))
print(paste0("The possibility of people with different birthday: 1 - ", p[100]))
options(digits = 3)
print(paste0("The possibility of people with different birthday: 1 - ", p[100]))
print(paste0("The possibility of people with different birthday: 1 - ", p[100]ï¼Œ options(digits = 3)))
print(paste0("The possibility of people with different birthday: 1 - ", p[100], options(digits = 3) ))
print(paste0("The possibility of people with different birthday: 1 - ", p[100]))
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
print(paste0("The possibility of people with different birthday: 1 - ", p[100]))
win = 1 - lose
good_win = win[(win - 1/2) > 0]
help(argmin)
good_win
win
win == min[(win - 1/2) > 0]
win == min(win[(win - 1/2) > 0])
help(where)
help(which)
which(win == min(win[(win - 1/2) > 0]))
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of people with different birthday: 1 - ", p[100]))
# 7.(c)
win = 1 - lose
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday: 1 - ", p[100]))
# 7.(c)
win = 1 - lose
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", p[100]))
# 7.(c)
win = 1 - lose
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
win[23]
win
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", p[100]))
# 7.(c)
win = 1 - lose
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", p[100]))
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", lose[100]))
# 7.(c)
win = 1 - lose
win
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", lose[100]))
# 7.(c)
win = 1 - lose
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
which(win == min(win[(win - 1/2) > 0]))
# lost[k] : k people all have different birthday or Losing the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", lose[100]))
# 7.(c)
win = 1 - lose
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
which(win == min(win[(win - 1/2) > 0]))
# lost[k] : k people all have different birthday or Losing the game
# win[k] : among k people, some 2 people have same birthday or Wining the game
lose = c(365 / 365)
for (i in 2:100){
k = i - 1
lose = append(lose, lose[k] * (365 - k) / 365)
}
# 7.(b)
print(paste0("The possibility of 100 people not with different birthday (I win): 1 - ", lose[100]))
# 7.(c)
win = 1 - lose
print(paste0("The smallest num k for a reasonable bet to me: ", which(win == min(win[(win - 1/2) > 0]))))
which(win == min(win[(win - 1/2) > 0]))
library(dplyr)
install.packages("dplyr")
library(dplyr)
help(filter)
head(mtcars)
####################
# dplyr Exercises
####################
library(dplyr)
head(mtcars)
filter(mtcars, mpg > 20 & cyl == 6)
arrange(mtcars, cyl, desc(t))
arrange(mtcars, cyl, desc(t))
arrange(mtcars, cyl, desc(wt))
select(mtcars, mpg, p)
select(mtcars, mpg, hp)
select(mtcars, gear) %>% distinct()
mutate(mtcars, performance = hp / wt)
summarise(mtcars, avg_mpg = mean(mpg, na.rm = TRUE))
mtcars %>% filter(cyl > 6) %>% summarise(stderr(hp, na.rm=TRUE))
mtcars %>% filter(cyl > 6) %>% summarise(stderr(hp))
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = stderr(hp))
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = stderr())
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = mean())
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = mean(hp, na.rm=TRUE))
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = stderr(hp, na.rm=TRUE))
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = stdin(hp, na.rm=TRUE))
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = stdin(hp))
mtcars %>% filter(cyl > 6) %>% summarise(std_hp = stderr(hp))
mtcars %>% filter(cyl > 6) %>% summarise(mean_hp = mean(hp, na.rm=TRUE))
mtcars
install.packages("tidyr")
install.packages("data.table")
qt1:qt10
X:Z
x:z
help(separate)
library(tidyr)
library(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
help("separate")
factorial(90) / factorial(79) / factorial(11)
install.packages("combinat")
combn(3, 2)
library(combinat)
combn(3, 2)
require(combinat)
combn(3, 2)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(data = mtcars, aes(x = mpg, y = hp))
pl <- ggplot(data = mtcars, aes(x = mpg, y = hp))
pl + geom_point()
help(7getSymbols)
help(7getSymbols)
install.packages("quantmod")
help(7getSymbols)
help(getSymbols)
help(getSymbols)
??getSymbols
library(quantmod)
ex <- getSymbol("GOOG", source("goog"))
ex <- getSymbols("GOOG", source("goog"))
ex <- getSymbols("GOOG", source("google"))
ex <- getSymbols("GOOG", src = "google")
ex <- getSymbols("GOOG", src = "yahoo")
barChart(ex)
hist(ex)
ex
getSymbols("AAPL",src="yahoo")
barChart(AAPL)
hist(AAPL)
type(AAPL)
install.packages(shiny)
install.packages("shiny")
pf(0.05,8,15)
pf(0.95,8,15)
pf(2,8,15)
qf(0.95,8,15)
qf(0.99,14,19)
qf(0.01, 15, 7)
rnorm(c(100,5),0,1)
rnorm(`00`,0,1)
rnorm(100,0,1)
df <- rnorm(100,0,1)
df <- data.frame(df)
df.reshape(20,5)
reshape(df, (10,5))
reshape(df, c(10,5))
mat <- matrix(df)
mat
mat <- rnorm(100,0,1)
mat <- matrix(mat)
mat
mat <- matrix(mat, 20,5)
mat
mean(mat, 2)
mean(mat)
mean(mat, 0)
rowMeans(mat)
mat <- matrix(rnorm(100000,0,1),20000,5)
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
RowVar(mat)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat
mean(RowVar(mat))
RowVar(mat)
mean(RowVar(mat))
mat
mat
RowVar(mat)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(100000,0,1),20000,5)
mean(RowVar(mat))
mat <- matrix(rnorm(700000,0,1),100000,7)
mean(RowVar(mat))
mat <- matrix(rnorm(700000,0,1),100000,7)
mean(RowVar(mat))
mat <- matrix(rnorm(700000,0,1),100000,7)
mean(RowVar(mat))
rt(100,5)
hist(rt(100,5))
hist(rt(10000,5))
hist(rt(5000000,5))
hist(rt(50000,5), bins = 10)
hist(rt(50000,5), breaks = 100)
hist(rt(50000,1000), breaks = 100)
hist(rt(50000,5), breaks = 100)
hist(rt(50000,1000), breaks = 100)
hist(rt(50000,5), breaks = 100)
library(shiny); runApp('Documents/Learn/Columbia/IEOR4150/Programming/project/Project.R')
runApp('Documents/Learn/Columbia/IEOR4150/Programming/project/Project.R')
runApp('Documents/Learn/Columbia/IEOR4150/Programming/project/Project.R')
runApp('Documents/Learn/Columbia/IEOR4150/Programming/project/Project.R')
getwd()
setwd("/Users/chenjipeng/Documents/Learn/Columbia/IEOR4150/Programming/project")
runApp('Project.R')
list(c(1))
runApp('Project.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/ref/shiny_app_win/run_app.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/ref/shiny_app_win/run_app.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/ref/shiny_app_win/run_app.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
jpeg(paste0(stock, "_fist_half_by_day", ".jpg"))
runApp('~/Documents/Learn/Columbia/IEOR4150/ref/shiny_app_win/run_app.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/ref/shiny_app_win/run_app.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/ref/shiny_app_win/run_app.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
runApp('Project.R')
