library(xts)
apply.weekly(df.log_returns, sum)
apply.weekly(df$log_returns, sum)
apply.weekly(df, sum)
df
# homework 11
# 1-(a)
library(lubridate)
df.zoo = read.zoo(df)
df.zoo
df
df %>% group_by(week = floor_date(row.names(df)))
# homework 11
# 1-(a)
library(dplyr)
df %>% group_by(week = floor_date(row.names(df)))
str(df)
df$time <- row.n\
df$time <- row.names(df)
df
str(df)
df$time <- as.Date(row.names(df))
str(df)
df %>% group_by(week = floor_date(time)
df %>% group_by(week = floor_date(time))
df
print(df %>% group_by(week = floor_date(time)))
df %>% group_by(week = isoweek(time))
week(df$time)
list(week(df$time))
strftime(row.names(df), fromat = "%V")
strftime(c("2014-03-16", "2014-03-17","2014-03-18", "2014-01-01"), format = "%V")
strftime(row.names(df), format = "%V")
df$week <- strftime(row.names(df), format = "%V")
df
aggregate(df, by = week, FUN = sum)
aggregate(df, by = df.week, FUN = sum)
aggregate(df, by = df$week, FUN = sum)
aggregate(df, by = week, FUN = sum)
aggregate(df, by = list(df$week), FUN = sum)
aggregate(df$log_returns, by = list(df$week), FUN = sum)
colnames(df2) <- c("week", "log_returns")
df2 <- aggregate(df$log_returns, by = list(df$week), FUN = sum)
colnames(df2) <- c("week", "log_returns")
df2
df.set_index("week")
row.names(df2) <- df2$week
df2
df
str(df)
df
summary(df)
library(lubridate)
install.packages(lubridate)
install.packages("lubridate")
# homework 11
# 1-(a)
library("lubridate")
df
df$year-week <- strftime(row.names(df), format = "%Y-%V")
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df
df2 <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
df2
df
str(df)
755/7
hist(df2)
hist(df2)
df
df2
str(df)
str(df2)
hist(df2)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
df.week <- df.week[, 2]
df.week
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
# homework 11
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
df.week
rownames(df.week) <- df.week[, 1]
df.week
colnames(df.week) <- c("year.week", "log_returns")
df.week <- df.week$log_returns
df.week
# homework 11
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
df.week
df.week$log_returns
# homework 11
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
hist(df$log_returns)
hist(df$log_returns, breaks = 100)
df
df$aim = sqrt(5) * (df$log_returns - mean(df$log_returns))
df
hist(df$aim)
hist(df$aim, breaks = 100)
dim(df)
# 1-(b)
df1 <- df[1:dim(df)/2,]
df2 <- df[dim(df)/2:,]
# 1-(b)
df1 <- df[1:dim(df)[1]/2 , ]
df2 <- df[dim(df)[1]/2: , ]
df2 <- df[dim(df)[1]/2: ]
df2 <- df[dim(df)[1]/2:, :]
df
df[100:]
df[500:,]
df[1:10,]
df[1:10, :]
df2 <- df[dim(df)[1]/2:, ]
dim(df)[1]/2
df[dim(df)[1]/2, ]
df2 <- df[dim(df)[1]/2:dim(df)[1], ]
# 1-(b)
df1 <- df[1:dim(df)[1]/2, ]
df2 <- df[dim(df)[1]/2:dim(df)[1], ]
# ********************************
# homework 11
# ********************************
breaks = round(sqrt(755)) -1
# ********************************
# homework 11
# ********************************
break = round(sqrt(755)) -1
hist(df$log_returns, breaks = breaks)
# ********************************
# homework 11
# ********************************
cal_break <- function(df) {
row = dim(df)[1]
cal_break = round(sqrt(row)) - 1
return cal_break
}
return(cal_break)
# ********************************
# homework 11
# ********************************
cal_break <- function(df) {
row = dim(df)[1]
cal_break = round(sqrt(row)) - 1
return(cal_break)
}
df2 <- df[dim(df)[1]/2:dim(df)[1], ]
# 1-(b)
df1 <- df[1:dim(df)[1]/2, ]
df1$aim = sqrt(5) * (d1$log_returns - mean(df1$log_returns))
hist(df$aim, breaks = cal_break(df1))
df2 <- df[dim(df)[1]/2:dim(df)[1], ]
df2.week <- aggregate(df2$log_returns, by = list(df2$year.week), FUN = sum)
rownames(df2.week) <- df2.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
hist(df2.week$log_returns, breaks = cal_break(df))
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
hist(df.week$log_returns, breaks = cal_break(df))
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
hist(df.week$log_returns, breaks = cal_break(df.week))
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
hist(df.week$log_returns, breaks = cal_break(df.week))
# homework 9
stocks = c("AAPL", "AMZN", "FB", "GOOG", "GOOGL", "MSFT", "MU", "NFLX", "NOW","NVDA")
bins = c(5, 10, round(sqrt(755)), 50, 100, 500 , 1000)
start_date = "2015-01-01"
end_date = "2018-01-01"
stocks_env = new.env()
getSymbols(Symbols = stocks, from = start_date, to = end_date, env = stocks_env)
stock_means = data.frame()
stock_vars = data.frame()
for (stock in stocks) {
# ********************************
# homework 9
# ********************************
df = data.frame(stocks_env[[stock]])
colnames(df) <- c("open", "high", "low", "close", "volume", "adjusted")
df$log_returns = log(df$close / df$open)
write.csv(x = df["log_returns"], file = paste0(stock, ".csv"))
cur_mean <- t(data.frame(apply(df, 2, mean)))
row.names(cur_mean) <- stock
stock_means = rbind(stock_means, cur_mean)
cur_var <- t(data.frame(apply(df, 2, var)))
row.names(cur_var) <- stock
stock_vars = rbind(stock_vars, cur_var)
# enter folder ./log_returns/hist/stock
if(!dir.exists(paste0("hist/", stock))){
dir.create(file.path("hist", stock), recursive = TRUE)
}
setwd(paste0("./hist/", stock))
# enter folder ./log_returns/hist/stock/close_hist
if(!dir.exists("./close_hist")) {
dir.create(file.path("close_hist"), recursive = TRUE)
}
setwd("./close_hist")
for (bin in bins) {
jpeg(paste0(stock, "_", bin, ".jpg"))
hist(df$close, breaks = bin - 1, main = paste0(stock," close price with bin = ", bin))
dev.off()
}
setwd("..")
# now at ./log_returns/hist/stock
# enter folder ./log_returns/hist/stock/log_hist
if(!dir.exists("./log_hist")) {
dir.create(file.path("log_hist"), recursive = TRUE)
}
setwd("./log_hist")
for (bin in bins) {
jpeg(paste0(stock, "_", bin, ".jpg"))
hist(df$log_returns, breaks = bin - 1, main = paste0(stock," log_retur with bin = ", bin))
dev.off()
}
setwd("..")
# finsh and return to the home directory
setwd("..")
setwd("..")
}
if(!dir.exists("./stats")) {
dir.create(file.path("stats"), recursive = TRUE)
}
setwd("./stats")
write.csv(x = stock_means, file = "Means.csv")
write.csv(x = stock_vars, file = "Vars.csv")
setwd("..")
# ********************************
# homework 11
# ********************************
cal_break <- function(df) {
row = dim(df)[1]
cal_break = round(sqrt(row)) - 1
return(cal_break)
}
cal_break(df)
dim(df)
if(!dir.exists("./hw11")) {
dir.create(file.path("hw11"), recursive = TRUE)
}
setwd("./hw11")
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
df.week
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
hist(df.week$log_returns, breaks = cal_break(df.week))
)
# 1-(b)
df1 <- df[1:dim(df)[1]/2, ]
df1
str(df1)
str(df)
# 1-(b)
df1 <- df[1:(dim(df)[1]/2), ]
str(df1)
df1$aim = sqrt(5) * (d1$log_returns - mean(df1$log_returns))
df1$aim = sqrt(5) * (df1$log_returns - mean(df1$log_returns))
df1
hist(df$aim, breaks = cal_break(df1))
hist(df1$aim, breaks = cal_break(df1))
# by week
df2 <- df[(dim(df)[1]/2):(dim(df)[1]), ]
str(df2)
df2.week <- aggregate(df2$log_returns, by = list(df2$year.week), FUN = sum)
rownames(df2.week) <- df2.week[, 1]
colnames(df2.week) <- c("year.week", "log_returns")
df2.week
hist(df2.week$log_returns, breaks = cal_break(df))
# ********************************
# homework 11
# ********************************
cal_break <- function(df) {
row = dim(df)[1]
cal_break = round(sqrt(row)) - 1
return(cal_break)
}
if(!dir.exists("./hw11")) {
dir.create(file.path("hw11"), recursive = TRUE)
}
setwd("./hw11")
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
jpeg(paste0(stock, "_", "by_week", ".jpg"))
hist(df.week$log_returns, breaks = cal_break(df.week))
dev.off()
# 1-(b)
# by day
df1 <- df[1:(dim(df)[1]/2), ]
df1$aim = sqrt(5) * (df1$log_returns - mean(df1$log_returns))
jpeg(paste0(stock, "_fist_half_by_day", ".jpg"))
hist(df1$aim, breaks = cal_break(df1))
dev.off()
# by week
df2 <- df[(dim(df)[1]/2):(dim(df)[1]), ]
df2.week <- aggregate(df2$log_returns, by = list(df2$year.week), FUN = sum)
rownames(df2.week) <- df2.week[, 1]
colnames(df2.week) <- c("year.week", "log_returns")
jpeg(paste0(stock, "_second_half_by_week", ".jpg"))
hist(df2.week$log_returns, breaks = cal_break(df))
dev.off()
library(quantmod)
setwd("/Users/chenjipeng/Documents/Learn/Columbia/IEOR4150/Project/log_returns")
# homework 9
stocks = c("AAPL", "AMZN", "FB", "GOOG", "GOOGL", "MSFT", "MU", "NFLX", "NOW","NVDA")
bins = c(5, 10, round(sqrt(755)), 50, 100, 500 , 1000)
start_date = "2015-01-01"
end_date = "2018-01-01"
stocks_env = new.env()
getSymbols(Symbols = stocks, from = start_date, to = end_date, env = stocks_env)
stock_means = data.frame()
stock_vars = data.frame()
for (stock in stocks) {
# ********************************
# homework 9
# ********************************
df = data.frame(stocks_env[[stock]])
colnames(df) <- c("open", "high", "low", "close", "volume", "adjusted")
df$log_returns = log(df$close / df$open)
write.csv(x = df["log_returns"], file = paste0(stock, ".csv"))
cur_mean <- t(data.frame(apply(df, 2, mean)))
row.names(cur_mean) <- stock
stock_means = rbind(stock_means, cur_mean)
cur_var <- t(data.frame(apply(df, 2, var)))
row.names(cur_var) <- stock
stock_vars = rbind(stock_vars, cur_var)
# enter folder ./log_returns/hist/stock
if(!dir.exists(paste0("hist/", stock))){
dir.create(file.path("hist", stock), recursive = TRUE)
}
setwd(paste0("./hist/", stock))
# enter folder ./log_returns/hist/stock/close_hist
if(!dir.exists("./close_hist")) {
dir.create(file.path("close_hist"), recursive = TRUE)
}
setwd("./close_hist")
for (bin in bins) {
jpeg(paste0(stock, "_", bin, ".jpg"))
hist(df$close, breaks = bin - 1, main = paste0(stock," close price with bin = ", bin))
dev.off()
}
setwd("..")
# now at ./log_returns/hist/stock
# enter folder ./log_returns/hist/stock/log_hist
if(!dir.exists("./log_hist")) {
dir.create(file.path("log_hist"), recursive = TRUE)
}
setwd("./log_hist")
for (bin in bins) {
jpeg(paste0(stock, "_", bin, ".jpg"))
hist(df$log_returns, breaks = bin - 1, main = paste0(stock," log_retur with bin = ", bin))
dev.off()
}
setwd("..")
# finsh and return to the home directory
setwd("..")
setwd("..")
}
if(!dir.exists("./stats")) {
dir.create(file.path("stats"), recursive = TRUE)
}
setwd("./stats")
write.csv(x = stock_means, file = "Means.csv")
write.csv(x = stock_vars, file = "Vars.csv")
setwd("..")
# ********************************
# homework 11
# ********************************
cal_break <- function(df) {
row = dim(df)[1]
cal_break = round(sqrt(row)) - 1
return(cal_break)
}
if(!dir.exists("./hw11")) {
dir.create(file.path("hw11"), recursive = TRUE)
}
setwd("./hw11")
# 1-(a)
df$year.week <- strftime(row.names(df), format = "%Y.%V")
df.week <- aggregate(df$log_returns, by = list(df$year.week), FUN = sum)
rownames(df.week) <- df.week[, 1]
colnames(df.week) <- c("year.week", "log_returns")
jpeg(paste0(stock, "_", "by_week", ".jpg"))
hist(df.week$log_returns, breaks = cal_break(df.week))
dev.off()
# 1-(b)
# by day
df1 <- df[1:(dim(df)[1]/2), ]
df1$aim = sqrt(5) * (df1$log_returns - mean(df1$log_returns))
jpeg(paste0(stock, "_fist_half_by_day", ".jpg"))
hist(df1$aim, breaks = cal_break(df1))
dev.off()
# by week
df2 <- df[(dim(df)[1]/2):(dim(df)[1]), ]
df2.week <- aggregate(df2$log_returns, by = list(df2$year.week), FUN = sum)
rownames(df2.week) <- df2.week[, 1]
colnames(df2.week) <- c("year.week", "log_returns")
jpeg(paste0(stock, "_second_half_by_week", ".jpg"))
hist(df2.week$log_returns, breaks = cal_break(df))
dev.off()
df2.week$aim = df2.week$log_returns - mean(df2.week$log_returns)
jpeg(paste0(stock, "_second_half_by_week", ".jpg"))
hist(df2.week$aim, breaks = cal_break(df))
dev.off()
var(df%log_returns)
var(df$log_returns)
df$log_returns
qt(0.01,10)
qt(0.01,100)
qt(0.5,100)
qt(100,1)
qt(1,1)
qt(0.05,1)
# 1-(c)
n = dim(df)[1]
S = var(df$log_returns)
# t_0.025 with degree n-1
t = qt(1-0.025, n-1)
X_mean = mean(df$log_returns)
length = 2 * S * t / sqrt(n)
print(paste0("The 95% CI is (", X_mean - length/2, ", ", X_mean + length/2, ")."))
# CI for variance
chi_0.025_n_1 = qchisq(1 - 0.025, n-1)
chi_0.975_n_1 = qchisq(1 - 0.975, n-1)
chi_0.025_n_1
chi_0.975_n_1
qchisq(0.025)
qchisq(0.025, 700)
qchisq(0.0000001, 700)
qchisq(0.000000000000000001, 700)
chi_0.025_n_1
chi_0.975_n_1
print(paste0("The 95% CI for vairance is (", (n-1)*S/chi_0.025_n_1, ", ", (n-1)*S/chi_0.975_n_1, ")."))
install.packages("shiny")
library("shiny")
ui <- fluidPage() {
}
shinyApp(ui = ui, server = server)
ui <- fluidPage("Hello World!")
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
df = data.frame(stocks_env[[input$stock]])
df = data.frame(stocks_env[[stock]])
str(df)
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
df
df2
aggregate(df2$log_returns, by = list(df2$year.week), FUN = sum)
df2.week <- aggregate(df2$log_returns, by = list(df2$year.week), FUN = sum)
df2.week
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
df = data.frame(stocks_env[[input$stock]])
df = data.frame(stocks_env[[stock]])
df$year.week <- strftime(row.names(df), format = "%Y.%V")
colnames(df) <- c("open", "high", "low", "close", "volume", "adjusted")
df
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
runApp('~/Documents/Learn/Columbia/IEOR4150/Project/hw11_R.R')
